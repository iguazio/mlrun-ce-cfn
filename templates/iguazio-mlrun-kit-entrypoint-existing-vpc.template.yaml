AWSTemplateFormatVersion: "2010-09-09"
Description: Deploys an EKS cluster with MLRun CE in n existing VPC
Metadata:
  AutoInstance:
    NodeInstanceType:
      InstanceFilters:
      - [['PV'], "!=", "SupportedVirtualizationTypes"]
  QuickStartDocumentation:
    EntrypointName: "Launch into a new VPC"
    Order: Index a
  LintSpellExclude:
    - Kubernetes
    - ARNs
    - Resource Names
    - autoscaler
    - IOPS
    - EfsStorageClass
    - Lambda
    - maxIO
    - Resource Name
    - Enabled
    - Disabled
    - Prometheus
    - Encrypt
    - Fargate
    - namespace
    - Snyk
    - Security
    - New Relic
    - APN
    - '"No"'
    - Windows
    - '"Config '
    - '(Optional)'
    - Unmanaged
    - Node
    - NewRelicIntegration
    - Integration
    - Auto Scaling
    - Partner
    - Vault
    - Consul
    - HashiCorp
    - CalicoIntegration
    - RafaySysIntegration
    - RafaySysProject
    - RafaySysBootstrapBucket
    - RafaySysBootstrapKey
    - RafaySysApiKey
    - RafaySysApiSecret
    - RafaySysFirstName
    - RafaySysLastName
    - RafaySysOrganizationName
    - RafaySysEmail
    - Rafay Systems
    - Rafay
    - Rancher
    - yaml
    - rafay
    - DomainName
    - Hosted
    - Domain Name
    - Domain name
    - Grafana
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: General configuration
        Parameters:
          - EKSClusterName
      - Label:
          default: VPC network configuration
        Parameters:
          - VPCID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - PrivateSubnet3ID
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PublicSubnet3ID
          - RemoteAccessCIDR
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - AdditionalEKSAdminUserArn
          - NodeInstanceType
          - MaxNumberOfNodes
          - NodeGroupOS
          - NodeInstanceFamily
      - Label:
          default: Amazon EC2 configuration
        Parameters:
          - KeyPairName
          - ProvisionBastionHost
      - Label:
          default: MLRun CE configuration
        Parameters:
          - ClusterDomain
          - REDISUrl
          - MLrunCeVersion
    ParameterLabels:
      PublicSubnet1ID:
        default: Public subnet 1 ID
      PublicSubnet2ID:
        default: Public subnet 2 ID
      PublicSubnet3ID:
        default: Public subnet 3 ID
      PrivateSubnet1ID:
        default: Private subnet 1 ID
      PrivateSubnet2ID:
        default: Private subnet 2 ID
      PrivateSubnet3ID:
        default: Private subnet 3 ID
      VPCID:
        default: VPC ID
      KeyPairName:
        default: SSH key name
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      NodeInstanceType:
        default: Instance type
      MaxNumberOfNodes:
        default: Maximum number of nodes
      AdditionalEKSAdminUserArn:
        default: Additional EKS admin ARN (IAM user)
      NumberOfAZs:
        default: Number of Availability Zones
      ProvisionBastionHost:
        default: Provision bastion host
      EKSClusterName:
        default: EKS cluster name
      NodeGroupOS:
        default: Node group OS
      ClusterDomain:
        default: Route 53 hosted DNS domain
      REDISUrl:
        default: The URL of your REDIS database
      MLrunCeVersion:
        default: MLRunCE Helm Chart version

Parameters:
  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: ID of your existing VPC (e.g., vpc-0343606e).
  PublicSubnet1ID:
    Type: String
    Description: ID of the public subnet in Availability Zone 1 of your existing VPC (e.g., subnet-a0246dcd).
    Default: ""
  PublicSubnet2ID:
    Type: String
    Description: ID of the public subnet in Availability Zone 2 of your existing VPC (e.g., subnet-b1236eea).
    Default: ""
  PublicSubnet3ID:
    Type: String
    Description: ID of the public subnet in Availability Zone 3 of your existing VPC (e.g., subnet-c3456aba).
    Default: ""
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the private subnet in Availability Zone 1 of your existing VPC (e.g., subnet-fe9a8b32).
  PrivateSubnet2ID:
    Type: "AWS::EC2::Subnet::Id"
    Description: ID of the private subnet in Availability Zone 2 of your existing VPC (e.g., subnet-be8b01ea).
  PrivateSubnet3ID:
    Type: String
    Description: ID of the private subnet in Availability Zone 3 of your existing VPC (e.g., subnet-abd39039).
    Default: ""
  # NOTE: Don't change the type of KeyPairName parameter back to AWS::EC2::KeyPair::KeyName.
  # String type is intentional as it enables default (empty) value. By using defaults, we
  # promote AWS Systems Manager Session Manager service, which is a recommended way
  # to connect to EC2 instances.
  KeyPairName:
    Description: Name of an existing key pair, which allows you to securely connect to your instance after it launches.
      Leave empty to proceed without a key pair. You would need to use AWS Systems Manager Session Manager to connect to the provisioned EC2 instances.
    Type: String
    Default: ""
  RemoteAccessCIDR:
    Default: "0.0.0.0/0"
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: CIDR IP range that is permitted to access the instances and the ingress (external URL). We recommend
      that you set this value to a trusted IP range.
    Type: String
  AdditionalEKSAdminUserArn:
    Default: ""
    Description: "(Optional) IAM user ARN to be granted administrative access to the EKS cluster."
    Type: String
  NodeInstanceType:
    Default: m5.4xlarge
    AllowedValues: ['t3.large', 't3.xlarge', 't3.2xlarge', 't3a.large', 't3a.xlarge', 't3a.2xlarge', 't2.large', 't2.xlarge', 't2.2xlarge', 'm5.large', 'm5.xlarge', 'm5.2xlarge', 'm5.4xlarge', 'm5.8xlarge', 'm5.12xlarge', 'm5.16xlarge', 'm5.24xlarge', 'm5a.large', 'm5a.xlarge', 'm5a.2xlarge', 'm5a.4xlarge', 'm5a.8xlarge', 'm5a.12xlarge', 'm5a.16xlarge', 'm5a.24xlarge', 'm5n.large', 'm5n.xlarge', 'm5n.2xlarge', 'm5n.4xlarge', 'm5n.8xlarge', 'm5n.12xlarge', 'm5n.16xlarge', 'm5n.24xlarge', 'm5zn.large', 'm5zn.xlarge', 'm5zn.2xlarge', 'm5zn.3xlarge', 'm5zn.6xlarge', 'm5zn.12xlarge', 'm4.large', 'm4.xlarge', 'm4.2xlarge', 'm4.4xlarge', 'm4.10xlarge', 'm4.16xlarge', 'c5.large', 'c5.xlarge', 'c5.2xlarge', 'c5.4xlarge', 'c5.9xlarge', 'c5.12xlarge', 'c5.18xlarge', 'c5.24xlarge', 'c5a.large', 'c5a.xlarge', 'c5a.2xlarge', 'c5a.4xlarge', 'c5a.9xlarge', 'c5a.12xlarge', 'c5a.18xlarge', 'c5a.24xlarge', 'c5n.large', 'c5n.xlarge', 'c5n.2xlarge', 'c5n.4xlarge', 'c5n.9xlarge', 'c5n.12xlarge', 'c5n.18xlarge', 'c4.large', 'c4.xlarge', 'c4.2xlarge', 'c4.4xlarge', 'c4.8xlarge', 'r5.large', 'r5.xlarge', 'r5.2xlarge', 'r5.4xlarge', 'r5.8xlarge', 'r5.12xlarge', 'r5.16xlarge', 'r5.24xlarge', 'r5a.large', 'r5a.xlarge', 'r5a.2xlarge', 'r5a.4xlarge', 'r5a.8xlarge', 'r5a.12xlarge', 'r5a.16xlarge', 'r5a.24xlarge', 'r5n.large', 'r5n.xlarge', 'r5n.2xlarge', 'r5n.4xlarge', 'r5n.8xlarge', 'r5n.12xlarge', 'r5n.16xlarge', 'r5n.24xlarge', 'r4.large', 'r4.xlarge', 'r4.2xlarge', 'r4.4xlarge', 'r4.8xlarge', 'r4.16xlarge', 'x1e.large', 'x1e.xlarge', 'x1e.2xlarge', 'x1e.4xlarge', 'x1e.8xlarge', 'x1e.16xlarge', 'x1e.32xlarge', 'x1.16xlarge', 'x1.32xlarge', 'p3.2xlarge', 'p3.8xlarge', 'p3.16xlarge', 'p3.24xlarge', 'p2.xlarge', 'p2.8xlarge', 'p2.16xlarge', 'g4dn.xlarge', 'g4dn.2xlarge', 'g4dn.4xlarge', 'g4dn.8xlarge', 'g4dn.12xlarge', 'g4dn.16xlarge', 'g4dn.2xlarge', 'g4ad.4xlarge', 'g4ad.8xlarge', 'g4ad.16xlarge', 'g3s.xlarge', 'g3.4xlarge', 'g3.8xlarge', 'g3.16xlarge']
    ConstraintDescription: Must be a valid EC2 instance type. 
    Description: EC2 instance type.
    Type: String
  MaxNumberOfNodes:
    Default: 1
    Description: By default the system is deployed with a single node and can scale to Max Number of Nodes.
    Type: Number
  ProvisionBastionHost:
    Type: String
    AllowedValues: [ "Enabled", "Disabled" ]
    Default: "Enabled"
    Description: Create a bastion host with a public IP to allow ssh access to the EKS EC2 instances.
  EKSClusterName:
    Type: String
    Default: "mlrun"
    AllowedPattern: "[a-z0-9][a-z0-9-]{0,61}[a-z0-9]"
    Description: "Name for the EKS cluster."
    ConstraintDescription: Can contain lower-case letters, numbers and hyphens (a hyphen may not be the first or last character)."
  ClusterDomain:
    Description: "The EKS cluster DNS record will be added to this domain."
    Default: replace-me.com
    Type: String
    MinLength: 1
  MLrunCeVersion:
    Description: (Optional) Override default (latest) Chart version
    Type: String
    Default: ""
  REDISUrl:
    Type: String
    Default: redis-replace-me.com

Mappings:
  Config:
    QSS3KeyPrefix: { Value: quickstart-amazon-eks/ }
    QSS3BucketRegion: { Value: us-east-2 }
    EKSPublicAccessEndpoint: { Value: Enabled }
    ALBIngressController: { Value: Enabled }
    NodeGroupType: { Value: Managed }
    KubernetesVersion: { Value: 1.22 }
    QSS3BucketName: { Value: mlrun-ce-cfn }

Resources:
  AdvancedConfigDefaultsStack:
    Type: AWS::CloudFormation::Stack
    Metadata: { cfn-lint: { config: { ignore_checks: [E9902, W9901] } } }
    Properties:
      TemplateURL: !Sub
        - 'https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-advanced-configuration.template.yaml'
        - QSS3BucketName: !FindInMap [ Config, QSS3BucketName, Value ]
          QSS3BucketRegion: !FindInMap [ Config, QSS3BucketRegion, Value ]
          QSS3KeyPrefix: !FindInMap [ Config, QSS3KeyPrefix, Value ]
      Parameters:
        ConfigSetName: !Ref AWS::StackName
        KubernetesVersion: !FindInMap [ Config, KubernetesVersion, Value ]
        NodeVolumeSize: 120
  EKSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: AdvancedConfigDefaultsStack
    Metadata:
      cfn-lint: { config: { ignore_checks: [ W9901, E9902 ] } }
    Properties:
      TemplateURL: !Sub
        - 'https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks.template.yaml'
        - QSS3BucketName: !FindInMap [ Config, QSS3BucketName, Value ]
          QSS3BucketRegion: !FindInMap [ Config, QSS3BucketRegion, Value ]
          QSS3KeyPrefix: !FindInMap [ Config, QSS3KeyPrefix, Value ]
      Parameters:
        PublicSubnet1ID: !Ref PublicSubnet1ID
        PublicSubnet2ID: !Ref PublicSubnet2ID
        PublicSubnet3ID: !Ref PublicSubnet3ID
        KeyPairName: !Ref KeyPairName
        QSS3BucketName: !FindInMap [ Config, QSS3BucketName, Value ]
        QSS3KeyPrefix: !FindInMap [ Config, QSS3KeyPrefix, Value ]
        QSS3BucketRegion: !FindInMap [ Config, QSS3BucketRegion, Value ]
        PrivateSubnet1ID: !Ref PrivateSubnet1ID
        PrivateSubnet2ID: !Ref PrivateSubnet2ID
        PrivateSubnet3ID: !Ref PrivateSubnet3ID
        NumberOfNodes: 1
        MaxNumberOfNodes: !Ref MaxNumberOfNodes
        NodeInstanceType: !Ref NodeInstanceType
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        AdditionalEKSAdminUserArn: !Ref AdditionalEKSAdminUserArn
        VPCID: !Ref VPCID
        ProvisionClusterAutoScaler: Enabled
        EfsStorageClass: Enabled
        ProvisionBastionHost: !Ref ProvisionBastionHost
        EKSPublicAccessEndpoint: !FindInMap [Config, EKSPublicAccessEndpoint, Value]
        ProvisionALBIngressController: !FindInMap [Config, ALBIngressController, Value]
        EKSClusterName: !Ref EKSClusterName
        ConfigSetName: !Ref AWS::StackName
        NodeGroupType: Managed
        NodeInstanceFamily: Standard
  MLRunKit:
    Type: AWS::CloudFormation::Stack
    DependsOn: EKSStack
    Properties:
      TemplateURL: !Sub
        - 'https://${QSS3BucketName}.s3.${QSS3BucketRegion}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/mlrun-kit.template.yaml'
        - QSS3BucketName: !FindInMap [ Config, QSS3BucketName, Value ]
          QSS3BucketRegion: !FindInMap [ Config, QSS3BucketRegion, Value ]
          QSS3KeyPrefix: !FindInMap [ Config, QSS3KeyPrefix, Value ]
      Parameters:
        EKSClusterName: !Ref EKSClusterName
        ClusterDomain: !Ref ClusterDomain
        MLrunCeVersion: !Ref MLrunCeVersion
        REDISUrl: !Ref REDISUrl
        RemoteAccessCIDR: !Ref RemoteAccessCIDR
        OIDCProvider: !Join [ '', !Split [ 'https://', !GetAtt EKSStack.Outputs.OIDCIssuerURL ] ]
Outputs:
  BastionIP:
    Value: !GetAtt EKSStack.Outputs.BastionIP
  EKSClusterName:
    Description: "This is the name of your EKS cluster"
    Value: !GetAtt EKSStack.Outputs.EKSClusterName
  KubeConfig:
    Description: "Run this command in your terminal to get access to your EKS cluster"
    Value: !Sub aws eks update-kubeconfig --name=${EKSClusterName}
  JupyterNotebook:
    Value: !GetAtt MLRunKit.Outputs.JupyterNotebook
  MLRunUI:
    Value: !GetAtt MLRunKit.Outputs.MLRunUI
  MLRunAPI:
    Value: !GetAtt MLRunKit.Outputs.MLRunAPI
  Nuclio:
    Value: !GetAtt MLRunKit.Outputs.Nuclio
  Grafana:
    Value: !GetAtt MLRunKit.Outputs.Grafana
  S3Bucket:
    Description: This bucket has to be deleted manually after deleting the stack
    Value: !GetAtt MLRunKit.Outputs.S3Bucket
